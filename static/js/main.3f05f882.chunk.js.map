{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFromSubmit","e","preventDefault","onAdd","props","validateForm","id","shortid","resetForm","onCheckUnique","alert","this","onSubmit","className","s","type","placeholder","onChange","FormInput","FormButton","Component","ContactListItem","onRemove","ContactItem","onClick","ContactsList","contacts","length","ContactList","map","contact","Filter","filter","App","number","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","localStorage","getItem","parsedContact","JSON","parse","prevProps","prevState","nextContacts","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f05f882.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__4TvGi\",\"ContactItem\":\"ContactList_ContactItem__2TMaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1zvAA\",\"FormInput\":\"ContactForm_FormInput__2aqf2\",\"FormButton\":\"ContactForm_FormButton__28giq\"};","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  phone: \"\",\n};\n\nclass ContactForm extends Component {\n  state = INITIAL_STATE;\n\n  handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleFromSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, phone } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidateFrom = this.validateForm();\n\n    if (!isValidateFrom) return;\n\n    onAdd({ id: shortid(), name, phone });\n    this.resetForm();\n  };\n\n  validateForm = () => {\n    const { name, phone } = this.state;\n    const { onCheckUnique } = this.props;\n    if (!name || !phone) {\n      alert(\"Some filed is empty\");\n      return false;\n    }\n\n    return onCheckUnique(name);\n  };\n\n  resetForm = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form onSubmit={this.handleFromSubmit} className={s.ContactForm}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={this.handleChangeForm}\n          className={s.FormInput}\n        />\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"Enter phone number\"\n          value={phone}\n          onChange={this.handleChangeForm}\n          className={s.FormInput}\n        />\n        <button type=\"submit\" className={s.FormButton}>\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onCheckUnique: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport s from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\n  return (\n    <li className={s.ContactItem}>\n      {name}: {phone} <button onClick={() => onRemove(id)}>delete</button>\n    </li>\n  );\n};\n\nconst ContactsList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={s.ContactList}>\n      {contacts.map((contact) => (\n        <ContactListItem {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  id: PropTypes.string,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from \"react\";\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"name\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Enter name for search\"\n    ></input>\n  );\n};\n\nexport default Filter;\n","import { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactsList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contact = localStorage.getItem(\"contacts\");\n    const parsedContact = JSON.parse(contact);\n\n    if (parsedContact) {\n      this.setState({ contacts: parsedContact });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n  }\n\n  handleAddContact = (newContact) =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handleCheckUniqueContact = (name) => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find((contact) => contact.name === name);\n\n    isExistContact && alert(\"Contact is already exist\");\n\n    return !isExistContact;\n  };\n\n  handleRemoveContact = (id) =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    }));\n\n  handleFilterChange = (filter) => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckUnique={this.handleCheckUniqueContact}\n        />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactsList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}